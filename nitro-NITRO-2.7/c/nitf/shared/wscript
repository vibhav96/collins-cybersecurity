import os, subprocess
from waflib import Options
from os.path import splitext, dirname, join

MAINTAINER         = 'adam.sylvester@gd-ais.com'
VERSION            = '1.0'
LANG               = 'c'
USE                = 'nitf-c'
PLUGIN             = 'nitf'
REMOVEPLUGINPREFIX = True
DEFINES            = ['NITF_MODULE_EXPORTS']

configure = options = distclean = lambda p: None

def build(bld):
    pluginNode = bld.path

    variant = bld.env['VARIANT'] or 'default'
    env = bld.all_envs[variant]
    
    pluginList = []
    plugins = pluginNode.ant_glob('*.c')

    for p in plugins:
        filename = str(p)
        isJ2KPlugin = filename in ['J2KDecompress.c', 'J2KCompress.c']
        if isJ2KPlugin and not env['CFLAGS_j2k-c']:
            continue

        kw = globals()
        pluginName = splitext(filename)[0]
        kw['NAME'] = pluginName
        kw['LIBNAME'] = pluginName
        kw['SOURCE'] = filename
        
        if isJ2KPlugin:
            kw['USE'] += ' j2k-c'
            kw['DEFINES'] += ['HAVE_J2K_H', 'J2K_MODULE_EXPORTS']
        
        bld.plugin(**kw)
        pluginList.append(pluginName)

    bld(features='add_targets', target='nitro-plugins',
        targets_to_add=pluginList)
